// app/layout.js
import { Roboto, Montserrat } from "next/font/google";
import { cookies, headers } from 'next/headers';
import redis from '@/lib/redis';
import jwt from 'jsonwebtoken';
import Sidebar from '@/components/Sidebar'; // nuovo componente
import Navbar from '@/components/Navbar';
import "./globals.css";

const COOKIE_NAME = process.env.COOKIE_NAME;
const JWT_SECRET = process.env.JWT_SECRET;

/*
const roboto = Roboto({
  weight: ['400', '700'],
  subsets: ['latin'],
  display: 'swap',
});

const montserrat = Montserrat({
  weight: ['400', '700'],
  subsets: ['latin'],
  display: 'swap',
});
*/

export const metadata = {
  title: "Control panel",
  description: "Generated by create next app",
};

const noNavBar = ['/login', '/sign-in'];

export default async function RootLayout({ children }) {
  const allHeaders = await headers();
  const url = allHeaders.get('x-url');
  const hideNavbar = noNavBar.includes(url);

  //console.log('[layout]', {url, hideNavbar})

  const cookieStore = await cookies();
  const token = cookieStore.get(COOKIE_NAME)?.value || '';

  if (token) {
    try {
      const decoded = jwt.verify(token, JWT_SECRET);
      const session = await redis.get(decoded.sessionId);

      if (session) {
        const data = JSON.parse(session);

		/*
        data.updated = new Date().toISOString();
        data.path = url;
        await redis.set(decoded.sessionId, JSON.stringify(data));
		*/
      } else {
        console.log('Session not found:', decoded.sessionId);
      }
    } catch (e) {
      console.log('[layout] Token error:', e.message);
      hideNavbar = true;
    }
  }

return (
  <html lang="en" data-theme="light">
    <body className={`min-h-screen flex flex-col`}>
      {/* Navbar in alto, a tutta larghezza */}
      {!hideNavbar && <Navbar />}

      {/* Layout principale con sidebar e contenuto */}
      <div className="flex flex-1">
        {!hideNavbar && <Sidebar />}
        <main className="flex-1 p-4">{children}</main>
      </div>
    </body>
  </html>
);

}
